<div class="flex flex-col h-full write_post_content">
  <form phx-change="Bonfire.Pages:add_section">
    <select name="section_id" class="select">
      <option>{l("Add an existing section")}</option>
      <option :for={section <- e(available_sections(), :edges, [])} value={ulid(section)}>{e(section, :post_content, :name, nil) || e(section, :name, nil) ||
          Text.truncate(
            Text.text_only(
              templated(
                e(section, :post_content, :summary, nil) || e(section, :post_content, :html_body, nil)
              )
            ),
            60
          ) || ulid(section)}</option>
    </select>
    <input type="hidden" name="page_id" value={@context_id}>
  </form>
  <hr>
  <Form
    for={%{}}
    as={:section}
    submit="Bonfire.Pages:edit_section"
    action="Bonfire.Pages:edit_section"
    opts={
      autocomplete: "off",
      "phx-target": "#smart_input"
    }
    class={if WriteEditorLive.use_rich_editor?(e(@smart_input_opts, :wysiwyg, true), @__context__),
      do: "with_editor flex-1",
      else: "with_textarea flex-1"}
  >
    <div class={
      "bg-base-100 flex h-full flex-1": @thread_mode != :flat,
      "bg-base-100 border-t border-base-content/10 p-3 h-full flex-1 sticky bottom-0 messages_smart_input":
        @thread_mode == :flat,
      "!border-0": @showing_within == :compose,
      "!relative border-none !h-auto !relative": @showing_within == :page
    }>
      <div class={
        "relative flex flex-col flex-1 h-full",
        "h-auto": @showing_within == :compose
      }>
        <Bonfire.UI.Common.InputControlsLive
          smart_input_opts={@smart_input_opts}
          thread_mode={@thread_mode}
          reply_to_id={ulid(@reply_to_id)}
          context_id={@context_id}
          create_object_type={@create_object_type}
          to_boundaries={@to_boundaries}
          to_circles={@to_circles}
          exclude_circles={@exclude_circles}
          showing_within={@showing_within}
          uploads={@uploads}
          uploaded_files={@uploaded_files}
          submit_label={l("Edit")}
        >
          <Inputs for={:post_content}>
            <div x-show="!open_boundaries" class="flex-1">
              <div display="style: none" x-show="title_open" x-transition>
                <label for="title" class="sr-only">{l("Title")}</label>
                <Field name={:name}>
                  <TextInput
                    value={e(@smart_input_opts, :name, nil)}
                    opts={
                      placeholder: l("Enter a name for a new section")
                    }
                    class={
                      "block w-full border-0 p-2 text-lg font-medium placeholder-base-content/70 bg-base-100 text-base-content border-b border-base-content/10",
                      "!border !border-base-content/30 rounded-lg mb-2": e(@thread_mode, nil) == :flat
                    }
                  />
                </Field>
              </div>
              <label for="description" class="sr-only">{l("Description")}</label>
              <Field name={:html_body}>
                <div class={@textarea_container_class} :class={@textarea_container_class_alpine}>
                  <WriteEditorLive
                    field_name="section[post_content][html_body]"
                    textarea_class={@textarea_class}
                    smart_input_opts={@smart_input_opts
                    |> Map.put(
                      :prompt,
                      l("Enter the markdown, liquid, and/or HTML for the new section...")
                    )}
                    insert_text={@insert_text}
                    thread_mode={@thread_mode}
                    showing_within={@showing_within}
                    advanced_mode
                  />
                </div>
              </Field>
            </div>
          </Inputs>
        </Bonfire.UI.Common.InputControlsLive>
      </div>
    </div>
  </Form>
</div>
